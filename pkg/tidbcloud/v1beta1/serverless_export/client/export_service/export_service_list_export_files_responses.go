// Code generated by go-swagger; DO NOT EDIT.

package export_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"tidbcloud-cli/pkg/tidbcloud/v1beta1/serverless_export/models"
)

// ExportServiceListExportFilesReader is a Reader for the ExportServiceListExportFiles structure.
type ExportServiceListExportFilesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExportServiceListExportFilesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExportServiceListExportFilesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewExportServiceListExportFilesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewExportServiceListExportFilesOK creates a ExportServiceListExportFilesOK with default headers values
func NewExportServiceListExportFilesOK() *ExportServiceListExportFilesOK {
	return &ExportServiceListExportFilesOK{}
}

/*
ExportServiceListExportFilesOK describes a response with status code 200, with default header values.

A successful response.
*/
type ExportServiceListExportFilesOK struct {
	Payload *models.V1beta1ListExportFilesResponse
}

// IsSuccess returns true when this export service list export files o k response has a 2xx status code
func (o *ExportServiceListExportFilesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this export service list export files o k response has a 3xx status code
func (o *ExportServiceListExportFilesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export service list export files o k response has a 4xx status code
func (o *ExportServiceListExportFilesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this export service list export files o k response has a 5xx status code
func (o *ExportServiceListExportFilesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this export service list export files o k response a status code equal to that given
func (o *ExportServiceListExportFilesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the export service list export files o k response
func (o *ExportServiceListExportFilesOK) Code() int {
	return 200
}

func (o *ExportServiceListExportFilesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1beta1/clusters/{clusterId}/exports/{exportId}/files][%d] exportServiceListExportFilesOK %s", 200, payload)
}

func (o *ExportServiceListExportFilesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1beta1/clusters/{clusterId}/exports/{exportId}/files][%d] exportServiceListExportFilesOK %s", 200, payload)
}

func (o *ExportServiceListExportFilesOK) GetPayload() *models.V1beta1ListExportFilesResponse {
	return o.Payload
}

func (o *ExportServiceListExportFilesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1beta1ListExportFilesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExportServiceListExportFilesDefault creates a ExportServiceListExportFilesDefault with default headers values
func NewExportServiceListExportFilesDefault(code int) *ExportServiceListExportFilesDefault {
	return &ExportServiceListExportFilesDefault{
		_statusCode: code,
	}
}

/*
ExportServiceListExportFilesDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ExportServiceListExportFilesDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this export service list export files default response has a 2xx status code
func (o *ExportServiceListExportFilesDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this export service list export files default response has a 3xx status code
func (o *ExportServiceListExportFilesDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this export service list export files default response has a 4xx status code
func (o *ExportServiceListExportFilesDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this export service list export files default response has a 5xx status code
func (o *ExportServiceListExportFilesDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this export service list export files default response a status code equal to that given
func (o *ExportServiceListExportFilesDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the export service list export files default response
func (o *ExportServiceListExportFilesDefault) Code() int {
	return o._statusCode
}

func (o *ExportServiceListExportFilesDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1beta1/clusters/{clusterId}/exports/{exportId}/files][%d] ExportService_ListExportFiles default %s", o._statusCode, payload)
}

func (o *ExportServiceListExportFilesDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1beta1/clusters/{clusterId}/exports/{exportId}/files][%d] ExportService_ListExportFiles default %s", o._statusCode, payload)
}

func (o *ExportServiceListExportFilesDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *ExportServiceListExportFilesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
