// Code generated by go-swagger; DO NOT EDIT.

package billing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"tidbcloud-cli/pkg/tidbcloud/v1beta1/billing/models"
)

// GetBillsBilledMonthReader is a Reader for the GetBillsBilledMonth structure.
type GetBillsBilledMonthReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBillsBilledMonthReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBillsBilledMonthOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBillsBilledMonthBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /bills/{billedMonth}] GetBillsBilledMonth", response, response.Code())
	}
}

// NewGetBillsBilledMonthOK creates a GetBillsBilledMonthOK with default headers values
func NewGetBillsBilledMonthOK() *GetBillsBilledMonthOK {
	return &GetBillsBilledMonthOK{}
}

/*
GetBillsBilledMonthOK describes a response with status code 200, with default header values.

OK
*/
type GetBillsBilledMonthOK struct {
	Payload *models.FormsBillsExplorer
}

// IsSuccess returns true when this get bills billed month o k response has a 2xx status code
func (o *GetBillsBilledMonthOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get bills billed month o k response has a 3xx status code
func (o *GetBillsBilledMonthOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bills billed month o k response has a 4xx status code
func (o *GetBillsBilledMonthOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get bills billed month o k response has a 5xx status code
func (o *GetBillsBilledMonthOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get bills billed month o k response a status code equal to that given
func (o *GetBillsBilledMonthOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get bills billed month o k response
func (o *GetBillsBilledMonthOK) Code() int {
	return 200
}

func (o *GetBillsBilledMonthOK) Error() string {
	return fmt.Sprintf("[GET /bills/{billedMonth}][%d] getBillsBilledMonthOK  %+v", 200, o.Payload)
}

func (o *GetBillsBilledMonthOK) String() string {
	return fmt.Sprintf("[GET /bills/{billedMonth}][%d] getBillsBilledMonthOK  %+v", 200, o.Payload)
}

func (o *GetBillsBilledMonthOK) GetPayload() *models.FormsBillsExplorer {
	return o.Payload
}

func (o *GetBillsBilledMonthOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FormsBillsExplorer)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBillsBilledMonthBadRequest creates a GetBillsBilledMonthBadRequest with default headers values
func NewGetBillsBilledMonthBadRequest() *GetBillsBilledMonthBadRequest {
	return &GetBillsBilledMonthBadRequest{}
}

/*
GetBillsBilledMonthBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetBillsBilledMonthBadRequest struct {
	Payload *models.BillingErrorsBaseError
}

// IsSuccess returns true when this get bills billed month bad request response has a 2xx status code
func (o *GetBillsBilledMonthBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bills billed month bad request response has a 3xx status code
func (o *GetBillsBilledMonthBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bills billed month bad request response has a 4xx status code
func (o *GetBillsBilledMonthBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bills billed month bad request response has a 5xx status code
func (o *GetBillsBilledMonthBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get bills billed month bad request response a status code equal to that given
func (o *GetBillsBilledMonthBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get bills billed month bad request response
func (o *GetBillsBilledMonthBadRequest) Code() int {
	return 400
}

func (o *GetBillsBilledMonthBadRequest) Error() string {
	return fmt.Sprintf("[GET /bills/{billedMonth}][%d] getBillsBilledMonthBadRequest  %+v", 400, o.Payload)
}

func (o *GetBillsBilledMonthBadRequest) String() string {
	return fmt.Sprintf("[GET /bills/{billedMonth}][%d] getBillsBilledMonthBadRequest  %+v", 400, o.Payload)
}

func (o *GetBillsBilledMonthBadRequest) GetPayload() *models.BillingErrorsBaseError {
	return o.Payload
}

func (o *GetBillsBilledMonthBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BillingErrorsBaseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
