// Code generated by go-swagger; DO NOT EDIT.

package connect_info_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"tidbcloud-cli/pkg/tidbcloud/connect_info/models"
)

// GetInfoReader is a Reader for the GetInfo structure.
type GetInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInfoBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInfoInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetInfoDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetInfoOK creates a GetInfoOK with default headers values
func NewGetInfoOK() *GetInfoOK {
	return &GetInfoOK{}
}

/*
GetInfoOK describes a response with status code 200, with default header values.

ok
*/
type GetInfoOK struct {
	Payload *models.ConnectInfo
}

// IsSuccess returns true when this get info o k response has a 2xx status code
func (o *GetInfoOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get info o k response has a 3xx status code
func (o *GetInfoOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get info o k response has a 4xx status code
func (o *GetInfoOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get info o k response has a 5xx status code
func (o *GetInfoOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get info o k response a status code equal to that given
func (o *GetInfoOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get info o k response
func (o *GetInfoOK) Code() int {
	return 200
}

func (o *GetInfoOK) Error() string {
	return fmt.Sprintf("[GET /ecosystem/api/internal/connect/info][%d] getInfoOK  %+v", 200, o.Payload)
}

func (o *GetInfoOK) String() string {
	return fmt.Sprintf("[GET /ecosystem/api/internal/connect/info][%d] getInfoOK  %+v", 200, o.Payload)
}

func (o *GetInfoOK) GetPayload() *models.ConnectInfo {
	return o.Payload
}

func (o *GetInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConnectInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInfoBadRequest creates a GetInfoBadRequest with default headers values
func NewGetInfoBadRequest() *GetInfoBadRequest {
	return &GetInfoBadRequest{}
}

/*
GetInfoBadRequest describes a response with status code 400, with default header values.

error
*/
type GetInfoBadRequest struct {
	Payload string
}

// IsSuccess returns true when this get info bad request response has a 2xx status code
func (o *GetInfoBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get info bad request response has a 3xx status code
func (o *GetInfoBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get info bad request response has a 4xx status code
func (o *GetInfoBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get info bad request response has a 5xx status code
func (o *GetInfoBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get info bad request response a status code equal to that given
func (o *GetInfoBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get info bad request response
func (o *GetInfoBadRequest) Code() int {
	return 400
}

func (o *GetInfoBadRequest) Error() string {
	return fmt.Sprintf("[GET /ecosystem/api/internal/connect/info][%d] getInfoBadRequest  %+v", 400, o.Payload)
}

func (o *GetInfoBadRequest) String() string {
	return fmt.Sprintf("[GET /ecosystem/api/internal/connect/info][%d] getInfoBadRequest  %+v", 400, o.Payload)
}

func (o *GetInfoBadRequest) GetPayload() string {
	return o.Payload
}

func (o *GetInfoBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInfoInternalServerError creates a GetInfoInternalServerError with default headers values
func NewGetInfoInternalServerError() *GetInfoInternalServerError {
	return &GetInfoInternalServerError{}
}

/*
GetInfoInternalServerError describes a response with status code 500, with default header values.

error
*/
type GetInfoInternalServerError struct {
	Payload string
}

// IsSuccess returns true when this get info internal server error response has a 2xx status code
func (o *GetInfoInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get info internal server error response has a 3xx status code
func (o *GetInfoInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get info internal server error response has a 4xx status code
func (o *GetInfoInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get info internal server error response has a 5xx status code
func (o *GetInfoInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get info internal server error response a status code equal to that given
func (o *GetInfoInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get info internal server error response
func (o *GetInfoInternalServerError) Code() int {
	return 500
}

func (o *GetInfoInternalServerError) Error() string {
	return fmt.Sprintf("[GET /ecosystem/api/internal/connect/info][%d] getInfoInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInfoInternalServerError) String() string {
	return fmt.Sprintf("[GET /ecosystem/api/internal/connect/info][%d] getInfoInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInfoInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *GetInfoInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInfoDefault creates a GetInfoDefault with default headers values
func NewGetInfoDefault(code int) *GetInfoDefault {
	return &GetInfoDefault{
		_statusCode: code,
	}
}

/*
GetInfoDefault describes a response with status code -1, with default header values.

error
*/
type GetInfoDefault struct {
	_statusCode int

	Payload string
}

// IsSuccess returns true when this get info default response has a 2xx status code
func (o *GetInfoDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get info default response has a 3xx status code
func (o *GetInfoDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get info default response has a 4xx status code
func (o *GetInfoDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get info default response has a 5xx status code
func (o *GetInfoDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get info default response a status code equal to that given
func (o *GetInfoDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get info default response
func (o *GetInfoDefault) Code() int {
	return o._statusCode
}

func (o *GetInfoDefault) Error() string {
	return fmt.Sprintf("[GET /ecosystem/api/internal/connect/info][%d] GetInfo default  %+v", o._statusCode, o.Payload)
}

func (o *GetInfoDefault) String() string {
	return fmt.Sprintf("[GET /ecosystem/api/internal/connect/info][%d] GetInfo default  %+v", o._statusCode, o.Payload)
}

func (o *GetInfoDefault) GetPayload() string {
	return o.Payload
}

func (o *GetInfoDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
