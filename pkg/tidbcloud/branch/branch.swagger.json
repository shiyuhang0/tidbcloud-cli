{
  "swagger": "2.0",
  "info": {
    "title": "Branch OpenAPIs for TiDB Cloud",
    "description": "The TiDB Cloud API uses HTTP Digest Authentication. It protects your private key from being sent over the network.The API key contains a public key and a private key, which act as the username and password required in the HTTP Digest Authentication. The private key only displays upon the key creation.",
    "version": "v1beta"
  },
  "tags": [
    {
      "name": "BranchService"
    }
  ],
  "host": "api.tidbcloud.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1beta/clusters/{cluster_id}/branches": {
      "get": {
        "summary": "List all branches in the cluster.",
        "operationId": "ListBranches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/openapiListBranchesResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster_id",
            "description": "The ID of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page_token",
            "description": "The number of pages.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": 1
          },
          {
            "name": "page_size",
            "description": "The size of a page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": 10
          }
        ],
        "tags": [
          "BranchService"
        ]
      },
      "post": {
        "summary": "Create a branch.",
        "operationId": "CreateBranch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/openapiCreateBranchResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster_id",
            "description": "The ID of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "display_name": {
                  "type": "string",
                  "description": "The name of creating branch. It must be 4-64 characters long."
                }
              },
              "description": "CreateBranchReq is the request message for CreateBranch.",
              "required": [
                "display_name"
              ]
            }
          }
        ],
        "tags": [
          "BranchService"
        ]
      }
    },
    "/api/v1beta/clusters/{cluster_id}/branches/{branch_id}": {
      "get": {
        "summary": "Get a branch.",
        "operationId": "GetBranch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/openapiBranch"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster_id",
            "description": "The ID of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "branch_id",
            "description": "The ID of the branch.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "BranchService"
        ]
      },
      "delete": {
        "summary": "Delete a branch.",
        "operationId": "DeleteBranch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster_id",
            "description": "The ID of the cluster.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "branch_id",
            "description": "The ID of the branch.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "BranchService"
        ]
      }
    }
  },
  "definitions": {
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "error": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32"
            },
            "message": {
              "type": "string"
            },
            "details": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/protobufAny"
              }
            }
          }
        }
      }
    },
    "openapiBasicBranch": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the branch."
        },
        "name": {
          "type": "string",
          "description": "The name of the branch."
        },
        "display_name": {
          "type": "string",
          "description": "The display name of the branch."
        },
        "cluster_id": {
          "type": "string",
          "description": "The ID of the cluster."
        },
        "parent_id": {
          "type": "string",
          "description": "The ID of the parent branch."
        },
        "state": {
          "$ref": "#/definitions/openapiBranchState",
          "description": "The status of the branch."
        },
        "create_time": {
          "type": "string",
          "format": "date-time",
          "description": "The creation timestamp of the branch."
        },
        "update_time": {
          "type": "string",
          "format": "date-time",
          "description": "The update timestamp of the branch."
        },
        "delete_time": {
          "type": "string",
          "format": "date-time",
          "description": "The delete timestamp of the branch."
        }
      },
      "description": "BranchItem is the information of branch.",
      "title": "BranchItem",
      "required": [
        "id",
        "name",
        "display_name",
        "cluster_id",
        "parent_id",
        "state",
        "create_time",
        "update_time",
        "delete_time"
      ]
    },
    "openapiBranch": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the branch."
        },
        "name": {
          "type": "string",
          "description": "The name of the branch."
        },
        "display_name": {
          "type": "string",
          "description": "The display name of the branch."
        },
        "cluster_id": {
          "type": "string",
          "description": "The ID of the cluster."
        },
        "parent_id": {
          "type": "string",
          "description": "The ID of the parent branch."
        },
        "state": {
          "$ref": "#/definitions/openapiBranchState",
          "description": "The status of the branch."
        },
        "endpoints": {
          "$ref": "#/definitions/openapiEndpoints",
          "description": "The endpoint of the branch."
        },
        "user_prefix": {
          "type": "string",
          "description": "The userPrefix of the branch."
        },
        "usages": {
          "$ref": "#/definitions/openapiUsages",
          "description": "The usages of the branch."
        },
        "create_time": {
          "type": "string",
          "format": "date-time",
          "description": "The creation timestamp of the branch."
        },
        "update_time": {
          "type": "string",
          "format": "date-time",
          "description": "The update timestamp of the branch."
        },
        "delete_time": {
          "type": "string",
          "format": "date-time",
          "description": "The delete timestamp of the branch."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The annotations of the branch."
        }
      },
      "description": "BranchItem is the information of branch.",
      "title": "BranchItem",
      "required": [
        "id",
        "name",
        "display_name",
        "cluster_id",
        "parent_id",
        "state",
        "endpoints",
        "user_prefix",
        "usages",
        "create_time",
        "update_time",
        "delete_time",
        "annotations"
      ]
    },
    "openapiBranchState": {
      "type": "string",
      "enum": [
        "CREATING",
        "READY",
        "DELETING",
        "MAINTENANCE"
      ]
    },
    "openapiCreateBranchResp": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "branch-SDUAOISD",
          "description": "The ID of the branch."
        }
      },
      "description": "CreateBranchResp is the response message for CreateBranch.",
      "required": [
        "id"
      ]
    },
    "openapiEndpoints": {
      "type": "object",
      "properties": {
        "public_endpoint": {
          "$ref": "#/definitions/openapiPublicEndpoint",
          "description": "The public endpoint of the branch."
        }
      },
      "description": "Endpoints is the endpoint of the branch."
    },
    "openapiListBranchesResp": {
      "type": "object",
      "properties": {
        "branches": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/openapiBasicBranch"
          },
          "description": "The items of branches in the cluster."
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of branches in the cluster."
        }
      },
      "description": "ListBranchesResp is the response of ListBranches.",
      "required": [
        "branches",
        "total"
      ]
    },
    "openapiPublicEndpoint": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string",
          "description": "The host of the public endpoint."
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "The port of the public endpoint."
        },
        "disabled": {
          "type": "boolean",
          "description": "The disabled of the public endpoint."
        }
      },
      "description": "PublicEndpoint is the public endpoint of the branch."
    },
    "openapiUsages": {
      "type": "object",
      "properties": {
        "request_unit": {
          "type": "string",
          "format": "int64",
          "description": "The request unit of the branch."
        },
        "row_storage": {
          "type": "string",
          "format": "int64",
          "description": "The storage of the branch."
        },
        "column_storage": {
          "type": "string",
          "format": "int64",
          "description": "The column storage of the branch."
        }
      },
      "description": "Usages is the usages of the branch."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    }
  }
}
